<launch>
  <master auto="start"/>
  <!-- <param name="/use_sim_time" value="true"/>-->

		
 <!-- 
   <node pkg="xsens_driver" name="xsens" type="mtnode.py" output="screen" >
		<param name="device" value="/dev/ttyUSB1" />
      <param name="baudrate" value="115200" />
      <param name="frame_id" value="/imu" />
   </node>
-->      
	<!-- Low level system nodes (running at embedded host) -->
 <!--  <node pkg="atuacao" name="roboteq" type="roboteq_node">
		<param name="port"  value="/dev/ttyUSB0" />
		<param name="model" value="AX2550" />
      <param name="publish_encoder" value="true" />
   </node>      
-->

  <!-- XSENS /dev/ttyUSB2 -->
 <!--  <include file="$(find lse_xsens_mti)/xsensDriver.launch"/>-->
   

 
   <!--Controle-->
   <!-- <include file="$(find carina_sbpl_nav_lrm)/launch/controller_carina.launch"/>  -->
   
        <param name="robot_description" command="cat $(find carina_description)/urdf/carina.urdf" />
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

         


   <!--Navegação-->
 <!--   <node name="carina_sbpl_nav_lrm" pkg="carina_sbpl_nav_lrm" type="carina_sbpl_nav_lrm" respawn="false" >
       <remap from="cmd_vel" to="carina_controller/command" />
   </node>
    <include file="$(find carina_sbpl_nav_lrm)/launch/nav_sbpl.launch"/>  
 -->   
   
   <!-- Localização -->
   <include file="$(find carina1_mapping)/launch/scan_matcher.launch" />
   
   <include file="$(find carina_sbpl_nav_lrm)/launch/move_base/slam_gmapping.xml"/> 

  <include file="$(find carina_sbpl_nav_lrm)/launch/rviz.xml"/>
<!--

  <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
    
    <remap from="imu" to="/lse_xsens_mti/xsens/imu/data" />
 
    <param name="fixed_frame" value="odom"/>
    <param name="base_frame" value="base_footprint"/>
    <param name="use_imu" value="true"/>
    <param name="use_odom" value="false"/>
    <param name="use_alpha_beta" value="true"/>
    <param name="use_cloud_input" value="false"/>
    <param name="publish_tf" value="false"/>
    <param name="publish_pose" value="false"/>
    <param name="publish_odometry" value="true"/>
    <param name="max_iterations" value="10"/>
  </node>
                                                         
 <node pkg="percepcao" name="odometry" type="odometry">
		<param name="robot_length" value="1.65" />
      <param name="robot_width" value="0.98" />
      <param name="const_odom" value="0.000736328" />
      <param name="encoder_to_angle_const" value="0.000255114" />
   </node>
  -->  
	<!--<rosparam command="load" file="$(find lrm_odometry)/params/odometry_params.yaml" />-->
<!--
	<node pkg="lrm_odometry" type="extended_odometry" name="imu_odometry" output="screen">
		<remap from="imu_data" to="/lse_xsens_mti/xsens/imu/data" />
      <remap from="odom" to="odom_imu" />

		<param name="rate" value="30" />
      <param name="publish_tf" value="true" />
	</node>
-->

  <!--- Run EFK Filter -->

<!--  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <remap from="imu_data" to="/lse_xsens_mti/xsens/imu/data" />
    <remap from="odom" to="odom_imu" />
    <remap from="vo" to="odom_scan" />
    
    <param name="output_frame" value="odom"/> 
    <param name="freq" value="50.0"/>
    <param name="sensor_timeout" value="1.0"/>  
    <param name="publish_tf" value="true"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="true"/>
    <param name="debug" value="false"/>
  </node>
  -->


</launch>
